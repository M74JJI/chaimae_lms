generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  SUPPORT
}

model User {
  id            String    @id @default(cuid())
  username      String    @unique
  name          String
  firstName     String
  lastName      String?
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  phoneNumber   String?
  role          UserRole  @default(USER)

  accounts Account[] @relation("UserAccounts")
  sessions Session[] @relation("UserSessions")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  userId String
  user   User   @relation("UserAccounts", fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  expires      DateTime

  userId String
  user   User   @relation("UserSessions", fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([identifier, token])
}


model ResetPasswordToken {
  id         String @id @default(cuid())
  email      String
  token      String @unique
  expires    DateTime

  @@unique([email, token])
}
